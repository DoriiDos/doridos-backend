name: Doridos Backend CD

on:
  push:
    branches:
      - main
      - develop
      - feature/#97-cd-test

jobs:
  docker-build:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - name: 저장소 chekcout
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.SUBMODULE_TOKEN }}

      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradlew 권한 설정
        run: chmod +x ./gradlew

      - name: Jar 파일 빌드
        run: ./gradlew bootJar

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: alswns7984/doridos:latest

  deploy:
    runs-on: self-hosted
    if: ${{ needs.docker-build.result == 'success' }}
    needs: [ docker-build ]
    steps:
      - name: gcp 인스턴스 접속
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USERNAME }}
          key: ${{ secrets.GCP_SSH }}
          port: ${{ secrets.GCP_PORT }}

          script: |
            sudo docker pull alswns7984/doridos:latest
            sudo docker stop backend || true
            sudo docker run -d -p 8080:8080 \
            --name backend \
            alswns7984/doridos:latest
            sudo docker image prune -f
